{"version":3,"sources":["ImagesOfWeight/underweight.jpg","ImagesOfWeight/normal.jpg","ImagesOfWeight/overweight.jpg","ImagesOfWeight/obesity.jpg","ImagesOfWeight/obesity second degree.jpg","ImagesOfWeight/obesity third degree.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","underWeight","normal","overWeight","obese","obese2","obese3","weight","height","weightStandard","heightStandard","bodyMass","showForm","showResults","showInformation","handleHeightChange","bind","handleWeightChange","handleSubmit","handleWeightChangeStan","handleHeightChangeStan","handleSubmitStan","event","this","setState","target","value","resultStan","toFixed","result","className","id","onSubmit","for","name","type","pattern","required","onChange","src","underWeightImg","normalImg","overweightImg","obesityImg","obesity2Img","obesity3Img","onClick","handleReturn","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.674ce634.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/underweight.ee976b7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/normal.988a9b98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/overweight.48f7cfef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obesity.552ccc56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obesity second degree.e50cd09c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obesity third degree.6c98c69a.jpg\";","import React from 'react';\nimport underWeightImg from './ImagesOfWeight/underweight.jpg';\nimport normalImg from './ImagesOfWeight/normal.jpg';\nimport overweightImg from './ImagesOfWeight/overweight.jpg';\nimport obesityImg from './ImagesOfWeight/obesity.jpg';\nimport obesity2Img from './ImagesOfWeight/obesity second degree.jpg';\nimport obesity3Img from './ImagesOfWeight/obesity third degree.jpg';\n\n\nimport './App.css'\n\n\nclass App extends React.Component{\n  constructor(props) {\n  super(props)\n\n    this.state = {\n       underWeight: false,\n       normal: false,\n       overWeight: false,\n       obese: false,\n       obese2: false,\n       obese3: false,\n       weight: '',\n       height: '',\n       weightStandard: '',\n       heightStandard: '',\n       bodyMass: '',\n       showForm: true,\n       showResults: false,\n       showInformation: true\n    }\n    \n    this.handleHeightChange = this.handleHeightChange.bind(this);\n    this.handleWeightChange = this.handleWeightChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleWeightChangeStan = this.handleWeightChangeStan.bind(this);\n    this.handleHeightChangeStan = this.handleHeightChangeStan.bind(this);\n    this.handleSubmitStan = this.handleSubmitStan.bind(this);\n  }\n  \n  handleHeightChange(event) {\n    this.setState({height: event.target.value});\n  }\n  handleWeightChange(event) {\n    this.setState({weight: event.target.value});\n  }\n  \n\n  handleHeightChangeStan(event){\n    this.setState({heightStandard: event.target.value});\n  }\n  handleWeightChangeStan(event){\n    this.setState({weightStandard: event.target.value});\n  }\n\n\n  handleSubmitStan(event) {\n    this.setState({\n        showResults: true,\n        showForm: false,\n        showInformation: false\n    })\n    let resultStan = ((this.state.weightStandard*703)/((this.state.heightStandard*12)**2)).toFixed(2);\n    this.setState({bodyMass: resultStan});\n\n    if (resultStan > 40) {\n    this.setState({ obese3: true})\n    } else if (resultStan > 35) {\n    this.setState({obese2: true})\n    } else if (resultStan > 30) {\n    this.setState({obese: true}) \n    } else if (resultStan > 24) {\n    this.setState({overWeight: true})\n    } else if (resultStan > 18.49) {\n    this.setState({normal: true})\n    } else {\n     this.setState({underWeight: true})\n    }\n  }\n\n\n  handleSubmit(event) {\n    this.setState({\n         showResults: true,\n         showForm: false,\n         showInformation: false\n    })\n    let result = (this.state.weight/(this.state.height^2)).toFixed(2);\n    this.setState({bodyMass: result});\n\n    if (result > 40) {\n      this.setState({ obese3: true})\n    } else if (result > 35) {\n     this.setState({obese2: true})\n    } else if (result > 30) {\n      this.setState({obese: true}) \n    } else if (result > 24) {\n      this.setState({overWeight: true})\n    } else if (result > 18.49) {\n      this.setState({normal: true})\n    } else {\n      this.setState({underWeight: true})\n    }\n  }\n\n  handleReturn(event) {\n    this.setState({\n        underWeight: false,\n        normal: false,\n        overWeight: false,\n        obese: false,\n        obese2: false,\n        obese3: false,\n        weight: '',\n        height: '',\n        weightStandard: '',\n        heightStandard: '',\n        bodyMass: '',\n        showForm: true,\n        showResults: false,\n        showInformation: true\n\n    })\n  }\n   \n\n  render(){\n    let showForm = this.state.showForm;\n    let showResults = this.state.showResults;\n    let underWeight = this.state.underWeight\n    let normal = this.state.normal\n    let overWeight = this.state.overWeight\n    let obese = this.state.obese\n    let obese2 = this.state.obese2\n    let obese3 = this.state.obese3\n    let bodyMass = this.state.bodyMass\n    let showInformation = this.state.showInformation\n \n   return (\n      <main className=\"App\">\n      {showInformation && (\n      <section className=\"initial\">\n        <h1> Body Mass Index  Checker </h1>\n        <h2>The Body Mass Index is a useful parameter that allows you to quickly check whether you have a healthy weight using a standardized formula.\n        This guide will help you understand where you stand in terms of weight range in response to your height and weight!\n        <br></br>\n        <br></br>\n        NOTE: The Body Mass Index is not accurate in determining weight range for pregnant women, people with high muscle mass or children.\n        </h2>\n      </section>\n      )}\n      {showForm && (\n      <section className= \"data\">\n        <form id=\"metric\" onSubmit = { ()=> this.handleSubmit()} >\n          <label for=\"height\">Enter your height (m)</label>\n          <br></br>\n          <input id=\"height\" name=\"height\" type=\"text\" pattern=\"^-?[0-9]\\d*\\.?\\d*$\"  required  value = {this.state.value}  onChange={this.handleHeightChange} />\n          <br></br>\n          <br></br>\n          <label for=\"weight\">Enter your weight (kg)</label>\n          <br></br>\n          <input id=\"weight\" name=\"weight\" type=\"text\" pattern=\"^-?[0-9]\\d*\\.?\\d*$\"  required value = {this.state.value} onChange={this.handleWeightChange}   />\n          <br></br>\n          <br></br>\n          <label for=\"subimssion\">See results!</label>\n          <br></br>\n          <button  className=\"button\" type=\"submit\"   >Submit</button>\n        </form>\n        <form id=\"standard\" onSubmit = { ()=> this.handleSubmitStan()}>\n          <label for=\"height\">Enter your height (ft)</label>\n          <br></br>\n          <input id=\"height\" name=\"height\" type=\"text\" pattern=\"^-?[0-9]\\d*\\.?\\d*$\"   value = {this.state.value} onChange={this.handleHeightChangeStan}  required />\n          <br></br>\n          <br></br>\n          <label for=\"weight\">Enter your weight (lbs)</label>\n          <br></br>\n          <input id=\"weight\" name=\"weight\" type=\"text\" pattern=\"^-?[0-9]\\d*\\.?\\d*$\"  value ={this.state.value} onChange={this.handleWeightChangeStan} required/>\n          <br></br>\n          <br></br>\n          <label for=\"subimssion\">See results!</label>\n          <br></br>\n          <button  className=\"button\" type=\"submit\">Submit</button>\n        </form>\n      </section> ) }\n      { showResults && (\n\n      <section className = \"results\">\n\n      <h1>These are the Results</h1>\n\n      <p id=\"bodymass\" >Your body mass index is {bodyMass}</p> \n\n      { underWeight && (\n      <section className=\"weight\">\n        <div className =\"resultsImg\">\n          <p>underweight</p>\n          <img src={underWeightImg} />\n        </div>\n      </section>\n      )}\n       { normal && (\n      <section className=\"weight\">\n        <div className =\"resultsImg\">\n          <p> Normal weight</p>\n          <img src={normalImg} />\n        </div>\n      </section>\n      )}\n       { overWeight && (\n      <section className=\"weight\">\n        <div className =\"resultsImg\">\n          <p> Overweight</p>\n          <img src={overweightImg} />\n        </div>\n      </section>\n      )}\n       { obese && (\n      <section className=\"weight\">\n        <div className =\"resultsImg\">\n          <p>Obese</p>\n          <img src={obesityImg} />\n        </div>\n      </section>\n      )}\n       { obese2 && (\n      <section className=\"weight\">\n        <div className =\"resultsImg\">\n          <p> Obese second degree</p>\n          <img src={obesity2Img} />\n        </div>\n      </section>\n      )}\n       { obese3 && (\n      <section className=\"weight\">\n        <div className =\"resultsImg\">\n          <p> Obese third degree</p>\n          <img src={obesity3Img} />\n        </div>\n      </section>\n      )}\n\n       <form>\n       <button className=\"button\" onClick ={()=> this.handleReturn()} >Return</button>\n       </form>\n \n      </section>\n      )}\n      \n\n      </main>\n\n\n\n   )  \n\n  }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}